<?php

namespace DoctrineProxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Campanha extends \App\Entity\Campanha implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'target', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'feedback', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'nome', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'descricao', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'inicio', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'final'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'target', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'feedback', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'nome', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'descricao', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'inicio', '' . "\0" . 'App\\Entity\\Campanha' . "\0" . 'final'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Campanha $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId(int $id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getTarget(): \App\Entity\Grupo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTarget', []);

        return parent::getTarget();
    }

    /**
     * {@inheritDoc}
     */
    public function setTarget(\App\Entity\Grupo $target)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTarget', [$target]);

        return parent::setTarget($target);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeedback(): \App\Entity\FeedBack
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeedback', []);

        return parent::getFeedback();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeedback(\App\Entity\FeedBack $feedback)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeedback', [$feedback]);

        return parent::setFeedback($feedback);
    }

    /**
     * {@inheritDoc}
     */
    public function getAcao(): \App\Entity\Acao
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcao', []);

        return parent::getAcao();
    }

    /**
     * {@inheritDoc}
     */
    public function setAcao(\App\Entity\Acao $acao)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcao', [$acao]);

        return parent::setAcao($acao);
    }

    /**
     * {@inheritDoc}
     */
    public function getNome(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNome', []);

        return parent::getNome();
    }

    /**
     * {@inheritDoc}
     */
    public function setNome(string $nome)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNome', [$nome]);

        return parent::setNome($nome);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescricao(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescricao', []);

        return parent::getDescricao();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescricao(string $descricao)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescricao', [$descricao]);

        return parent::setDescricao($descricao);
    }

    /**
     * {@inheritDoc}
     */
    public function getInicio(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInicio', []);

        return parent::getInicio();
    }

    /**
     * {@inheritDoc}
     */
    public function setInicio(\DateTime $inicio)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInicio', [$inicio]);

        return parent::setInicio($inicio);
    }

    /**
     * {@inheritDoc}
     */
    public function getFinal(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFinal', []);

        return parent::getFinal();
    }

    /**
     * {@inheritDoc}
     */
    public function setFinal(\DateTime $final)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFinal', [$final]);

        return parent::setFinal($final);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function getPessoa(): \App\Entity\Pessoa
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPessoa', []);

        return parent::getPessoa();
    }

    /**
     * {@inheritDoc}
     */
    public function setPessoa(\App\Entity\Pessoa $pessoa)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPessoa', [$pessoa]);

        return parent::setPessoa($pessoa);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsuario(): \App\Entity\Usuario
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsuario', []);

        return parent::getUsuario();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsuario(\App\Entity\Usuario $usuario)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsuario', [$usuario]);

        return parent::setUsuario($usuario);
    }

}
